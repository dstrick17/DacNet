# Build real neural network
import torch
import torch.nn as nn
import torch.nn.funcitonal as F
import torch.optim as optim
import torchvision.transforms as transforms
import os
from tqdm.auto import tqdm
################################################################################
# Define a one epoch training function
################################################################################
def train(epoch, model, trainloader, optimizer, criterion)



################################################################################
# Define a validation function
################################################################################
def validate(model, valloader, criterion, device)





############################################################################
#    Configuration Dictionary 
############################################################################
def main():
    CONFIG ={
        'model': DenseNET,
        'batch_size': 24
    }

##################################################################################
    #      Data Transformation 
#################################################################################
tranform_train = transforms.Compose([

])

transforms_test = 

#################################################################################
    #       Data Loading
##############################################################################
trainset = ...



##################################################################################
    #   Instantiate model and move to target device
###################################################################################
model = ...



#################################################################################################################
    # Loss Function, Optimizer and optional learning rate scheduler
#####################################################################################
criterion = 
optimizer = scheduler =


wandb
######################################################################################
    # --- Training Loop
######################################################################################
best_val_acc = 0.0
for epoch in range(CONFIG["epochs"])

######################################################################################
    # Evaluation
######################################################################################